version: '2.13'
services:
  db:
    container_name: postgres_container
    image: postgres:15
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGDATA: "${PGDATA}"
    volumes:
        - ./data:/docker-entrypoint-initdb.d
        - ./data:/var/lib/postgresql/data
    ports:
        - "5432:5432"

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
          limits:
            cpus: '1'
            memory: 4G

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_PASSWORD}"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    depends_on:
      - db

  redis:
    container_name: redis_container
    image: redis
    ports:
      - "6379:6379"

  web:
    container_name: support_web_container
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/support
    ports:
      - '8000:8000'
      - '5555:5555'
    depends_on:
      - db