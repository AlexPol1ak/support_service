version: '2.13'
services:
  db:
    container_name: ${DB_CONTAINER_NAME}
    image: postgres:15
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGDATA: "${PGDATA}"
    volumes:
        - ./databases/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d
        - ./databases/data:/var/lib/postgresql/data
    ports:
        - "5432:${POSTGRES_PORT}"

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
          limits:
            cpus: '1'
            memory: 4G

  pgadmin:
    container_name: ${PG_CONTAINER_NAME}
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_PASSWORD}"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./databases/pgadmin:/var/lib/pgadmin
    ports:
      - "5050:${PG_EXTERNAL_PORT}"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    depends_on:
      - db

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    build: redis
    ports:
      - "6379:${REDIS_PORT}"

  web:
    container_name: ${WEB_CONTAINER_NAME}
    build: support
    env_file:
      - .env
    entrypoint: ["sh", "docker-entrypoint.sh"]

    ports:
      - '8000:8000'
    volumes:
      - ./support:/support
    restart: unless-stopped
    depends_on:
      - db

  flower:
    container_name: ${FLOWER_CONTAINER_NAME}
    image: mher/flower
    ports:
      - '${FLOWER_PORT}:${FLOWER_PORT}'
    env_file:
      - .env
    command: ['celery', '--broker=${REDIS_PREFIX}${REDIS_CONTAINER_NAME}:${REDIS_PORT}', 'flower', '--basic_auth=${FLOWER_LOGIN}:${FLOWER_PASSWORD}']
    depends_on:
      - web
      - redis
